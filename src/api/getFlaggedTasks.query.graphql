fragment TaskViewModel on Task {
  name
  id
  effectiveDueDate
  completed
  effectivelyCompleted
  containingProject {
    id
    name
  }
  flagged
}

query GetTasks($flagged: Boolean, $available: Boolean, $withEffectiveDueDate: Boolean) {
  defaultDocument {
    flattenedTasks {
      edges {
        node {
          ...TaskViewModel
        }
      }
    }
  }
}

query GetInboxTasks {
  defaultDocument {
    inboxTasks @filter(conditions: [{ enabled: true, field: "effectivelyCompleted", value: "false" }]) {
      edges {
        node {
          ...TaskViewModel
        }
      }
    }
  }
}

query GetTasksInProject($projectId: String!) {
  defaultDocument {
    projects {
      byId(id: $projectId) {
        rootTask {
          tasks {
            edges {
              node {
                ...TaskViewModel
              }
            }
          }
        }
      }
    }
  }
}

query GetNestedProjects {
  defaultDocument {
    folders {
      edges {
        node {
          name
          id
          projects {
            edges {
              node {
                name
                completed
                id
                availableTaskCount
              }
            }
          }
        }
      }
    }
  }
}
