fragment TaskViewModel on Task {
  name
  id
  effectiveDueDate
  completed
  effectivelyCompleted
  containingProject {
    id
    name
  }
  flagged
}

query GetTasks($flagged: Boolean, $available: Boolean, $withEffectiveDueDate: Boolean) {
  flattenedTasks(flagged: $flagged, available: $available, withEffectiveDueDate: $withEffectiveDueDate) {
    ...TaskViewModel
  }
}

query GetInboxTasks {
  defaultDocument {
    inboxTasks @whose(field: "effectivelyCompleted", op: "=", value: "false") {
      edges {
        node {
          ...TaskViewModel
        }
      }
    }
  }
}

query GetTasksInProject($projectId: String!) {
  defaultDocument {
    projects {
      byId(id: $projectId) {
        rootTask {
          tasks {
            ...TaskViewModel
          }
        }
      }
    }
  }
}

query GetNestedProjects {
  defaultDocument {
    folders {
      name
      id
      projects {
        name
        completed
        id
        availableTaskCount
      }
    }
  }
}
