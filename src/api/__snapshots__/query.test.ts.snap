// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`query for GetInboxTasksDocument 1`] = `
"parent.map((elm) => {
  return {
    name: elm.name(),
    id: elm.id(),
    effectiveDueDate: elm.effectiveDueDate(),
    completed: elm.completed(),
    effectivelyCompleted: elm.effectivelyCompleted(),
    containingProject: elm.containingProject()
      ? {
          id: elm.containingProject().id(),
          name: elm.containingProject().name(),
        }
      : undefined,
    flagged: elm.flagged(),
  };
});
"
`;

exports[`query for GetTasksDocument 1`] = `
"parent.map((elm) => {
  return {
    name: elm.name(),
    id: elm.id(),
    effectiveDueDate: elm.effectiveDueDate(),
    completed: elm.completed(),
    effectivelyCompleted: elm.effectivelyCompleted(),
    containingProject: elm.containingProject()
      ? {
          id: elm.containingProject().id(),
          name: elm.containingProject().name(),
        }
      : undefined,
    flagged: elm.flagged(),
  };
});
"
`;

exports[`query for GetTasksInProjectDocument 1`] = `
"const projectId = \\"foobar\\";
({
  projects: {
    byId: parent.projects.byId(projectId)
      ? {
          rootTask: {
            tasks: parent.projects.byId(projectId).rootTask().tasks()
              ? parent.projects
                  .byId(projectId)
                  .rootTask()
                  .tasks()
                  .filter((e) => e.effectiveDeferDate() < new Date())
                  .map((elm) => {
                    return {
                      name: elm.name(),
                      id: elm.id(),
                      effectiveDueDate: elm.effectiveDueDate(),
                      completed: elm.completed(),
                      effectivelyCompleted: elm.effectivelyCompleted(),
                      containingProject: elm.containingProject()
                        ? {
                            id: elm.containingProject().id(),
                            name: elm.containingProject().name(),
                          }
                        : undefined,
                      flagged: elm.flagged(),
                    };
                  })
              : undefined,
          },
        }
      : undefined,
  },
});
"
`;

exports[`run for GetTasksInProjectDocument 1`] = `
Object {
  "projects": Object {
    "byId": Object {
      "rootTask": Object {
        "tasks": Array [
          Object {
            "completed": false,
            "containingProject": Object {
              "id": undefined,
              "name": "projectName",
            },
            "effectiveDueDate": null,
            "effectivelyCompleted": null,
            "flagged": false,
            "id": "bar",
            "name": "foo",
          },
        ],
      },
    },
  },
}
`;
