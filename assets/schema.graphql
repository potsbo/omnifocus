type Project {
  name: String!
  id: String!
  rootTask: Task!
  availableTaskCount: Int!
  completed: Boolean!
}

type Task {
  name: String!
  id: String!
  effectiveDueDate: String
  completed: Boolean!
  effectivelyCompleted: Boolean!
  containingProject: Project
  flagged: Boolean!
  tasks: [Task!]
}

type ProjectConnection {
  byId(id: String!): Project
  all: [Project!]! @call
}

type Folder {
  name: String!
  id: String!
  projects: [Project!]!
}

type DefaultDocument {
  projects: ProjectConnection! @noCall
  folders: [Folder!]!
}

type Query {
  flattenedTasks(available: Boolean, flagged: Boolean, limit: Int, withEffectiveDueDate: Boolean): [Task!]!
  inboxTasks(flagged: Boolean, available: Boolean): [Task!]!
  defaultDocument: DefaultDocument!
}

directive @call on FIELD_DEFINITION
directive @noCall on FIELD_DEFINITION
directive @noFunc on FIELD
directive @only(field: String!, op: String, value: String) on FIELD
